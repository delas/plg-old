/*
 * PLGProcessWindow.java
 *
 * Created on Dec 11, 2009, 9:17:13 AM
 */

package it.unipd.math.plg.ui;

import att.grappa.Grappa;
import it.unipd.math.plg.models.PlgProcess;
import java.awt.BorderLayout;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.rmi.CORBA.Util;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jdesktop.application.Action;
import org.processmining.framework.util.Dot;

/**
 *
 * @author delas
 */
public class PLGProcessWindow extends javax.swing.JInternalFrame {

    /** Creates new form PLGProcessWindow */
    public PLGProcessWindow() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setName("Form"); // NOI18N

        jToolBar1.setRollover(true);
        jToolBar1.setName("Process operation"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(it.unipd.math.plg.ui.ProcessLogGeneratorApp.class).getContext().getActionMap(PLGProcessWindow.class, this);
        jButton3.setAction(actionMap.get("actionSaveAs")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(it.unipd.math.plg.ui.ProcessLogGeneratorApp.class).getContext().getResourceMap(PLGProcessWindow.class);
        jButton3.setIcon(resourceMap.getIcon("jButton3.icon")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setFocusable(false);
        jButton3.setName("jButton3"); // NOI18N
        jToolBar1.add(jButton3);

        jButton1.setAction(actionMap.get("actionSaveAsDot")); // NOI18N
        jButton1.setIcon(resourceMap.getIcon("jButton1.icon")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setName("jButton1"); // NOI18N
        jToolBar1.add(jButton1);

        jButton2.setAction(actionMap.get("actionGenerateLog")); // NOI18N
        jButton2.setIcon(resourceMap.getIcon("jButton2.icon")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setName("jButton2"); // NOI18N
        jToolBar1.add(jButton2);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

	private PlgProcess process;


	public void setProcess(PlgProcess process) {
		this.process = process;
		try {
			jPanel1.add(process.getHeuristicsNet().getGrappaVisualization(), BorderLayout.CENTER);
			jPanel2.add(process.getPetriNet().getGrappaVisualization(), BorderLayout.CENTER);
		} catch (IOException ex) {
			Logger.getLogger(PLGProcessWindow.class.getName()).log(Level.SEVERE, null, ex);
			ex.printStackTrace();
		}
		pack();
		setSize(getWidth() + 400, getHeight());
	}
	

	public PlgProcess getProcess() {
		return process;
	}

	@Action
	public void actionSaveAsDot() {
		Object[] possibilities = {"Heuristics Net", "Petri Net"};
		String s = (String)JOptionPane.showInputDialog(
                    this,
                    "Which model do you want to save as Dot?",
                    "Exporting process",
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    possibilities,
                    "Heuristics Net");

		if (s == null) {
			return;
		}

		String filename = File.separator+"dot";
	    JFileChooser fc = new JFileChooser(new File(filename));
		FileFilter ff = new FileNameExtensionFilter("Dot file", "dot");
		fc.setFileFilter(ff);
	    fc.showSaveDialog(this);
	    File selFile = fc.getSelectedFile();
	    if (selFile != null) {
			String saveFilename = selFile.toString();
			String ext = saveFilename.substring(saveFilename.lastIndexOf(".") + 1, saveFilename.length());
			if (!ext.equals("dot")) {
				saveFilename = saveFilename + ".dot";
			}
	    	try {
				if (s.equals("Heuristics Net")) {
					process.saveHeuristicsNetAsDot(saveFilename);
				} else {
					process.savePetriNetAsDot(saveFilename);
				}
	    		javax.swing.JOptionPane.showMessageDialog(this, "File saved in "+ saveFilename);
	    	} catch (IOException e) {
	    		e.printStackTrace();
	    		System.exit(1);
	    	}
	    }
	}

	@Action
	public void actionGenerateLog() {
		int cases = -1;
		int percentAsInterval = -1;

		JFrame mainFrame = ProcessLogGeneratorApp.getApplication().getMainFrame();
		PLGSingleLogSetup logSetup = new PLGSingleLogSetup(mainFrame, true);
		logSetup.setLocationRelativeTo(this);
		logSetup.setModal(true);
		logSetup.setVisible(true);

		cases = logSetup.getCases();
		percentAsInterval = logSetup.getPercentAsInterval();

		if (cases > 0 && percentAsInterval >= 0) {
			String filename = File.separator + "dot";
			JFileChooser fc = new JFileChooser(new File(filename));
			FileFilter ff = new FileNameExtensionFilter("ZIP file", "zip");
			fc.setFileFilter(ff);
			fc.showSaveDialog(this);
			File selFile = fc.getSelectedFile();
			if (selFile != null) {
				String saveFilename = selFile.toString();
				String ext = saveFilename.substring(saveFilename.lastIndexOf(".") + 1, saveFilename.length());
				if (!ext.equals("zip")) {
					saveFilename = saveFilename + ".zip";
				}
				try {
					PLGWaiting wait = new PLGWaiting(null, true);
					wait.setLocationRelativeTo(this);
					wait.setLabel("Genearting log...");
					wait.setVisible(true);

					process.saveAsNewLog(saveFilename, cases, percentAsInterval);

					wait.setVisible(false);

					javax.swing.JOptionPane.showMessageDialog(this, "File saved in "+ saveFilename);
				} catch (Exception e) {
					javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
				}
			}
		}
	}

	@Action
	public void actionSaveAs() {
		String filename = File.separator+"dot";
	    JFileChooser fc = new JFileChooser(new File(filename));
		FileFilter ff = new FileNameExtensionFilter("ProcessLogGenerator file", "plg");
		fc.setFileFilter(ff);
	    fc.showSaveDialog(this);
	    File selFile = fc.getSelectedFile();
	    if (selFile != null) {
			String saveFilename = selFile.toString();
			String ext = saveFilename.substring(saveFilename.lastIndexOf(".") + 1, saveFilename.length());
			if (!ext.equals("plg")) {
				saveFilename = saveFilename + ".plg";
			}
	    	try {
				process.saveProcessAs(saveFilename);
	    		javax.swing.JOptionPane.showMessageDialog(this, "File saved in "+ saveFilename);
	    	} catch (IOException e) {
	    		e.printStackTrace();
	    		System.exit(1);
	    	}
	    }
	}
}
